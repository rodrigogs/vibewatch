name: Release Please

on:
  push:
    branches:
      - master

permissions:
  contents: write
  pull-requests: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
    steps:
      - name: Run Release Please
        id: release
        uses: googleapis/release-please-action@v4
        with:
          release-type: rust
          # Repository workflow permissions enabled to allow PR creation
          token: ${{ secrets.GITHUB_TOKEN }}

  publish-crate:
    name: Publish to crates.io
    needs: release-please
    if: ${{ needs.release-please.outputs.release_created }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Publish to crates.io
        run: cargo publish --token ${{ secrets.CARGO_TOKEN }}
        continue-on-error: true

  build-binaries:
    name: Build Release Binaries
    needs: release-please
    if: ${{ needs.release-please.outputs.release_created }}
    strategy:
      matrix:
        include:
          # macOS binaries
          - target: x86_64-apple-darwin
            os: macos-latest
            name: vibewatch-macos-x86_64
          - target: aarch64-apple-darwin
            os: macos-latest
            name: vibewatch-macos-aarch64
          # Windows binary
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            name: vibewatch-windows-x86_64.exe
          # Linux users can install via: cargo install vibewatch
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Build binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Strip binary (Unix)
        if: runner.os != 'Windows'
        run: strip target/${{ matrix.target }}/release/vibewatch

      - name: Rename binary (Unix)
        if: runner.os != 'Windows'
        run: mv target/${{ matrix.target }}/release/vibewatch ${{ matrix.name }}

      - name: Rename binary (Windows)
        if: runner.os == 'Windows'
        run: mv target/${{ matrix.target }}/release/vibewatch.exe ${{ matrix.name }}

      - name: Upload binary to release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload ${{ needs.release-please.outputs.tag_name }} ${{ matrix.name }}
